{"name":"Awesome PCAP Tools","tagline":"All the right reserved by original authors.","body":"Introduction\r\n------------\r\n\r\nThis project dose not contain any source code or files. I just want to make a\r\nlist of tools to process pcap files in research of network traffic. Items with\r\nnotation `(R)` indicate recommendations in specific categories. For more\r\nawesome lists, see https://github.com/sindresorhus/awesome\r\n\r\n> * [Linux commands](#linuxcmds)\r\n> * [Traffic Capture](#capture)\r\n> * [Traffic Analysis/Inspection](#analysis)\r\n> * [File Extraction](#fileextraction)\r\n> * [Other Projects](#others)\r\n\r\nLinux commands<a name=\"linuxcmds\"></a>\r\n--------------------------------------\r\n\r\n* Nload\r\n\r\n    Nload is a commandline tool that allows users to monitor the incoming and\r\noutgoing traffic separately. It also draws outa graph to indicate the same, the\r\nscale of which can be adjusted. Easy and simple to use, and does not support\r\nmany options. [Screenshot](http://www.binarytides.com/blog/wp-\r\ncontent/uploads/2014/03/nload.png)\r\n\r\n* Iftop\r\n\r\n    Iftop measures the data flowing through individual socket connections, and\r\nit works in a manner that is different from Nload. Iftop uses the pcap library\r\nto capture the packets moving in and out of the network adapter, and then sums\r\nup the size and count to find the total bandwidth under use. Although iftop\r\nreports the bandwidth used by individual connections, it cannot report the\r\nprocess name/id involved in the particular socket connection. But being based\r\non the pcap library, iftop is able to filter the traffic and report bandwidth\r\nusage over selected host connections as specified by the filter.\r\n[Screenshot](http://www.binarytides.com/blog/wp-\r\ncontent/uploads/2014/03/iftop.png)\r\n\r\n* Iptraf\r\n\r\n    Iptraf is an interactive and colorful IP Lan monitor. It shows individual\r\nconnections and the amount of data flowing between the hosts.\r\n[Screenshot](http://www.binarytides.com/blog/wp-\r\ncontent/uploads/2014/03/iptraf.png)\r\n\r\n* Nethogs\r\n\r\n    Nethogs is a small 'net top' tool that shows the bandwidth used by\r\nindividual processes and sorts the list putting the most intensive processes on\r\ntop. In the event of a sudden bandwidth spike, quickly open nethogs and find\r\nthe process responsible. Nethogs reports the PID, user and the path of the\r\nprogram. [Screenshot](http://www.binarytides.com/blog/wp-\r\ncontent/uploads/2014/03/nethogs.png)\r\n\r\n* Bmon\r\n\r\n    Bmon (Bandwidth Monitor) is a tool similar to nload that shows the traffic\r\nload over all the network interfaces on the system. The output also consists of\r\na graph and a section with packet level details.\r\n[Screenshot](http://www.binarytides.com/blog/wp-content/uploads/2014/03 /bmon-\r\n640x480.png)\r\n\r\n* Slurm\r\n\r\n    Slurm is 'yet' another network load monitor that shows device statistics\r\nalong with an ascii graph. It supports 3 different styles of graphs each of\r\nwhich can be activated using the c, s and l keys. Simple in features, slurm\r\ndoes not display any further details about the network load.\r\n[Screenshot](http://www.binarytides.com/blog/wp-\r\ncontent/uploads/2014/03/slurm.png)\r\n\r\n* Tcptrack\r\n\r\n    Tcptrack is similar to iftop, and uses the pcap library to capture packets\r\nand calculate various statistics like the bandwidth used in each connection. It\r\nalso supports the standard pcap filters that can be used to monitor specific\r\nconnections. [Screenshot](http://www.binarytides.com/blog /wp-\r\ncontent/uploads/2014/03/tcptrack.png)\r\n\r\n* Vnstat\r\n\r\n    Vnstat is bit different from most of the other tools. It actually runs a\r\nbackground service/daemon and keeps recording the size of data transfer all the\r\ntime. Next it can be used to generate a report of the history of network usage.\r\n[Screenshot]()\r\n\r\n* Bwm-ng\r\n\r\n    Bwm-ng (Bandwidth Monitor Next Generation) is another very simple real time\r\nnetwork load monitor that reports a summary of the speed at which data is being\r\ntransferred in and out of all available network interfaces on the system.\r\n[Screenshot]()\r\n\r\n* CBM (Color Bandwidth Meter)\r\n\r\n    A tiny little simple bandwidth monitor that displays the traffic volume\r\nthrough network interfaces. No further options, just the traffic stats are\r\ndisplay and updated in realtime. [Screenshot](http://www.binarytides.com/blog\r\n/wp-content/uploads/2014/03/cbm.png)\r\n\r\n* Speedometer\r\n\r\n    Another small and simple tool that just draws out good looking graphs of\r\nincoming and outgoing traffic through a given interface.\r\n[Screenshot](http://www.binarytides.com/blog/wp-\r\ncontent/uploads/2014/03/speedometer.png)\r\n\r\n* Pktstat\r\n\r\n    Pktstat displays all the active connections in real time, and the speed at\r\nwhich data is being transferred through them. It also displays the type of the\r\nconnection, i.e. tcp or udp and also details about http requests if involved.\r\n[Screenshot](http://www.binarytides.com/blog/wp-\r\ncontent/uploads/2014/03/pktstat.png)\r\n\r\n* Netwatch\r\n\r\n    Netwatch is part of the netdiag collection of tools, and it too displays\r\nthe connections between local host and other remote hosts, and the speed at\r\nwhich data is transferring on each connection.\r\n[Screenshot](http://www.binarytides.com/blog/wp-\r\ncontent/uploads/2014/03/netwatch.png)\r\n\r\n* Trafshow\r\n\r\n    Like netwatch and pktstat, trafshow reports the current active connections,\r\ntheir protocol and the data transfer speed on each connection. It can filter\r\nout connections using pcap type filters.\r\n[Screenshot](http://www.binarytides.com/blog/wp-\r\ncontent/uploads/2014/03/trafshow.png)\r\n\r\n* Netload\r\n\r\n    The netload command just displays a small report on the current traffic\r\nload, and the total number of bytes transferred since the program start. No\r\nmore features are there. Its part of the netdiag.\r\n[Screenshot](http://www.binarytides.com/blog/wp-\r\ncontent/uploads/2014/03/netload.png)\r\n\r\n* Ifstat\r\n\r\n    The ifstat reports the network bandwidth in a batch style mode. The output\r\nis in a format that is easy to log and parse using other programs or utilities.\r\n[Screenshot]()\r\n\r\n* Dstat\r\n\r\n    Dstat is a versatile tool (written in python) that can monitor different\r\nsystem statistics and report them in a batch style mode or log the data to a\r\ncsv or similar file. This example shows how to use dstat to report network\r\nbandwidth [Screenshot]()\r\n\r\n* Collectl\r\n\r\n    Collectl reports system statistics in a style that is similar to dstat, and\r\nlike dstat it is gathers statistics about various different system resources\r\nlike cpu, memory, network etc. Over here is a simple example of how to use it\r\nto report network usage/bandwidth. [Screenshot]()\r\n\r\nTraffic Capture<a name=\"capture\"></a>\r\n---------------\r\n\r\n* Libpcap/Tcpdump `(R)`\r\n\r\n    The official site of tcpdump, a powerful command-line packet analyzer; and\r\nlibpcap, a portable C/C++ library for network traffic capture.\r\n(http://www.tcpdump.org/)\r\n\r\n* Ngrep\r\n\r\n    Ngrep strives to provide most of GNU grep's common features, applying them\r\nto the network layer. ngrep is a pcap-aware tool that will allow you to specify\r\nextended regular or hexadecimal expressions to match against data payloads of\r\npackets. It currently recognizes TCP, UDP and ICMP across Ethernet, PPP, SLIP,\r\nFDDI, Token Ring and null interfaces, and understands bpf filter logic in the\r\nsame fashion as more common packet sniffing tools, such as tcpdump and snoop.\r\n(http://www.packetfactory.net/Projects/ngrep)\r\n\r\n* TTT: Tele Traffic Tapper\r\n\r\n    TTT is yet another descendant of tcpdump but it is capable of real-time,\r\ngraphical, and remote traffic-monitoring. ttt won't replace tcpdump, rather, it\r\nhelps you find out what to look into with tcpdump. ttt monitors the network and\r\nautomatically picks up the main contributors of the traffic within the time\r\nwindow. The graphs are updated every second by default.\r\n(http://www.csl.sony.co.jp/person/kjc/kjc/software.html#ttt)\r\n\r\n* n2disk (Commercial)\r\n\r\n    A multi-Gigabit network traffic recorder with indexing capabilities. n2disk\r\nis a network traffic recorder application. With n2disk you can capture full-\r\nsized network packets at multi-Gigabit rate (above 10 Gigabit/s on adequate\r\nhardware) from a live network interface, and write them into files without any\r\npacket loss. n2disk has been designed to write files into disks for very long\r\nperiods, you have to specify a maximum number of distinct file that may be\r\nwritten during the execution, and if n2disk reaches the maximum number of\r\nfiles, it will start recycling the files from the oldest one. This way you can\r\nhave a complete view of the traffic for a fixed temporal window ...\r\n(http://www.ntop.org/products/n2disk/)\r\n\r\n* PF_RING\r\n\r\n    PF_RING is a new type of network socket that dramatically improves the\r\npacket capture speed, and thatâ€™s characterized by the following properties:\r\nAvailable for Linux kernels 2.6.32 and newer. No need to patch the kernel: just\r\nload the kernel module. PF_RING-aware drivers for increased packet capture\r\nacceleration. ... (http://www.ntop.org/products/pf_ring/)\r\n\r\n* jNetPcap\r\n\r\n    jNetPcap is a packet capturing library for Java that is available for Linux\r\nand Windows. jNetPcap leverages libpcap respectively WinPcap and employs the\r\nJava Native Interface (JNI) for using the functionality provided by\r\nlibpcap/WinPcap. (http://jnetpcap.com)\r\n\r\n* clj-net-pcap\r\n\r\n    clj-net-pcap is a packet capturing library for Clojure. clj-net-pcap uses\r\njNetPcap and adds convenience functionality around jNetPcap for easing the\r\nusability. A paper about clj-net-pcap was published in scope of COMPSACW 2014:\r\nhttp://ieeexplore.ieee.org/xpl/articleDetails.jsp?tp=&arnumber=6903107\r\n(https://github.com/ruedigergad/clj-net-pcap)\r\n\r\nTraffic Analysis/Inspection<a name=\"analysis\"></a>\r\n--------------------------------------------------\r\n\r\n* Wireshark suit `(R)`\r\n\r\n    The well-konwn tool suit to support packet analyzer and protocol decoder.\r\n(http://www.wireshark.org/) It also includes a few practical tools and scripts\r\nto support most of the common usage. Here is a brief list of these tools\r\n(http://wiki.wireshark.org/Tools)\r\n\r\n* WAND\r\n\r\n    A wonderful collection of tools built on libtrace to process network\r\ntraffic, which is from The University of Waikato. I love this project!\r\nhttp://research.wand.net.nz/\r\n\r\n* Tcptrace `(R)`\r\n\r\n    A tool written by Shawn Ostermann at Ohio University, for analysis of TCP\r\ndump files. It can take as input the files produced by several popular packet-\r\ncapture programs, including tcpdump, snoop, etherpeek, HP Net Metrix, and\r\nWinDump. tcptrace can produce several different types of output containing\r\ninformation on each connection seen, such as elapsed time, bytes and segments\r\nsent and recieved, retransmissions, round trip times, window advertisements,\r\nthroughput, and more. It can also produce a number of graphs for further\r\nanalysis. http://tcptrace.org/index.html\r\n\r\n* Tstat `(R)`\r\n\r\n    A passive sniffer able to provide several insight on the traffic patterns\r\nat both the network and transport levels with a tremendous set of flow\r\nfeatures. http://tstat.tlc.polito.it/\r\n\r\n* Tcpsplit `(R)`\r\n\r\n    A tool to break a single libpcap packet trace into some number of sub-\r\ntraces, breaking the trace along TCP connection boundaries so that a TCP\r\nconnection doesn't end up split across two sub-traces. This is useful for\r\nmaking large trace files tractable for in- depth analysis and for subsetting a\r\ntrace for developing analysis on only part of a trace.\r\nhttp://www.icir.org/mallman/software/tcpsplit/\r\n\r\n* Tcpflow `(R)`\r\n\r\n    A program that captures data transmitted as part of TCP connections\r\n(flows), and stores the data in a way that is convenient for protocol analysis\r\nor debugging. A program like 'tcpdump' shows a summary of packets seen on the\r\nwire, but usually doesn't store the data that's actually being transmitted. In\r\ncontrast, tcpflow reconstructs the actual data streams and stores each flow in\r\na separate file for later analysis. (Original)\r\nhttp://www.circlemud.org/jelson/software/tcpflow/ or (Newest)\r\nhttps://github.com/simsong/tcpflow\r\n\r\n* Tcpreplay\r\n\r\n    Replays a pcap file on an interface using libnet.\r\n    http://tcpreplay.synfin.net/\r\n\r\n* Tcpstat\r\n\r\n    Tcpstat reports certain network interface statistics much like vmstat does\r\nfor system statistics. tcpstat gets its information by either monitoring a\r\nspecific interface, or by reading previously saved tcpdump data from a file.\r\nhttp://www.frenchfries.net/paul/tcpstat/\r\n\r\n* Tcplook\r\n\r\n    Tracelook is an Tcl/TK program for graphically viewing the contents of\r\ntrace files created using the -w argument to tcpdump. Tracelook should look at\r\nall protocols, but presently only looks at TCP connections. The program is slow\r\nand uses system resources prodigiously.\r\nhttp://ita.ee.lbl.gov/html/contrib/tracelook.html\r\n\r\n* Tcpdpriv\r\n\r\n    Tcpdpriv is program for eliminating confidential information (user data and\r\naddresses) from packets collected on a network interface (or, from trace files\r\ncreated using the -w argument to tcpdump). Tcpdpriv removes the payload of TCP\r\nand UDP, and the entire IP payload for other protocols. It implements several\r\naddress scrambling methods; the sequential numbering method and its variants,\r\nand a hash method with preserving address prefix.\r\nhttp://ita.ee.lbl.gov/html/contrib/tcpdpriv.html\r\n\r\n* Tcpslice\r\n\r\n    Tcpslice is a tool for extracting portions of packet trace files generated\r\nusing tcpdump's -w flag. It can combine multiple trace files, and/or extract\r\nportions of one or more traces based on time. TCPslice originally comes from:\r\nftp://ftp.ee.lbl.gov/tcpslice.tar.gz also mirrored here. tcpslice can also be\r\nfound in the tcpdump CVS server, as the project tcpslice.\r\nftp://ftp.ee.lbl.gov/tcpslice.tar.gz\r\n\r\n* TCP-Reduce\r\n\r\n    TCP-Reduce is a collection of Bourne shell scripts for reducing tcpdump\r\ntraces to one-line summaries of each TCP connection present in the trace. The\r\nscripts look only at TCP SYN/FIN/RST packets. Connections without SYN packets\r\nin the trace (such as those on-going at the beginning of the trace) will not\r\nappear in the summary. Garbaged packets (those missing some of their contents)\r\nare reported to stderr as bogon's and are discarded. Occasionally the script\r\ngets fooled by retransmissions with altered sequence numbers, and reports\r\nerroneous huge connection sizes - always check large connections (say 100 MB or\r\nmore) for plausibility. http://ita.ee.lbl.gov/html/contrib/tcp-reduce.html\r\n\r\n* dpkt\r\n\r\n    Python packet creation/parsing library. http://code.google.com/p/dpkt/\r\n\r\n* Pcap2har\r\n\r\n    A program to convert .pcap network capture files to HTTP Archive files\r\nusing library dpkt. https://github.com/andrewf/pcap2har\r\n\r\n* Libnet\r\n\r\n    Libnet is a collection of routines to help with the construction and\r\nhandling of network packets. It provides a portable framework for low-level\r\nnetwork packet shaping, handling and injection. Libnet features portable packet\r\ncreation interfaces at the IP layer and link layer, as well as a host of\r\nsupplementary and complementary functionality. Using libnet, quick and simple\r\npacket assembly applications can be whipped up with little effort.\r\nhttp://www.packetfactory.net/Projects/Libnet/\r\n\r\n* Libnids\r\n\r\n    Libnids, designed by Rafal Wojtczuk, is an implementation of an E-component\r\nof Network Intrusion Detection System. It emulates the IP stack of Linux 2.0.x.\r\nLibnids offers IP defragmentation, TCP stream assembly and TCP port scan\r\ndetection. The most valuable feature of libnids is reliability. A number of\r\ntests were conducted, which proved that libnids predicts behaviour of protected\r\nLinux hosts as closely as possible. http://libnids.sourceforge.net/\r\n\r\n* ECap\r\n\r\n    Ecap (external capture) is a distributed network sniffer with a web front-\r\nend. Ecap was written many years ago in 2005, but a post on the tcpdump-workers\r\nmailing list requested a similar application... so here it is. It would be fun\r\nto update it and work on it again if there's any interest.\r\nhttps://bitbucket.org/nathanj/ecap/wiki\r\n\r\n* HttpSniffer\r\n\r\n    A multi-threading tool to sniff TCP flow statistics and embedded HTTP\r\nheaders from PCAP file. Each TCP flow carrying HTTP is exported to text file in\r\nJSON format. https://github.com/caesar0301/http-sniffer\r\n\r\n* AIEngine\r\n\r\n    AIEngine is a next generation interactive/programmable packet inspection\r\nengine with capabilities of learning without any human intervention, NIDS\r\nfunctionality, DNS domain classification, network collector and many others.\r\nAIEngine also helps network/security professionals to identify traffic and\r\ndevelop signatures for use them on NIDS, Firewalls, Traffic classifiers and so\r\non. Available on https://bitbucket.org/camp0/aiengine\r\n\r\n* Network Expect\r\n\r\n    Network Expect is a framework that allows to easily build tools that can\r\ninteract with network traffic. Following a script, traffic can be injected into\r\nthe network, and decisions can be taken, and acted upon, based on received\r\nnetwork traffic. An interpreted language provides branching and high-level\r\ncontrol structures to direct the interaction with the network. Network Expect\r\nuses libpcap for packet capture and libwireshark (from the Wireshark project)\r\nfor packet dissection tasks. (GPL, BSD/Linux/OSX) Submitted by: Eloy Paris\r\n{peloy at chapus.net} http://www.netexpect.org/\r\n\r\n* Socket Sentry\r\n\r\n    Socket Sentry is a real-time network traffic monitor for KDE Plasma in the\r\nsame spirit as tools like iftop and netstat. Submitted by: Rob Hasselbaum {rob\r\nat hasselbaum.net} http://code.google.com/p/socket-sentry\r\n\r\n* Sniff\r\n\r\n    Makes output from the tcpdump program easier to read and parse.\r\nhttp://www.thedumbterminal.co.uk/software/sniff.html\r\n\r\n* EtherApe\r\n\r\n    EtherApe is a graphical network monitor for Unix modeled after etherman.\r\nFeaturing link layer, ip and TCP modes, it displays network activity\r\ngraphically. Hosts and links change in size with traffic. Color coded protocols\r\ndisplay. It supports Ethernet, FDDI, Token Ring, ISDN, PPP and SLIP devices. It\r\ncan filter traffic to be shown, and can read traffic from a file as well as\r\nlive from the network. http://etherape.sourceforge.net/\r\n\r\n* Snort\r\n\r\n    Snort is an open source network intrusion prevention and detection system\r\n(IDS/IPS) developed by Sourcefire. Combining the benefits of signature,\r\nprotocol and anomaly- based inspection, Snort is the most widely deployed\r\nIDS/IPS technology worldwide. With millions of downloads and approximately\r\n300,000 registered users, Snort has become the de facto standard for IPS.\r\nhttp://www.snort.org/\r\n\r\n* Scapy\r\n\r\n    Scapy is a powerful interactive packet manipulation program. It is able to\r\nforge or decode packets of a wide number of protocols, send them on the wire,\r\ncapture them, match requests and replies, and much more. It can easily handle\r\nmost classical tasks like scanning, tracerouting, probing, unit tests, attacks\r\nor network discovery (it can replace hping, 85% of nmap, arpspoof, arp-sk,\r\narping, tcpdump, tethereal, p0f, etc.). It also performs very well at a lot of\r\nother specific tasks that most other tools can't handle, like sending invalid\r\nframes, injecting your own 802.11 frames, combining technics (VLAN hopping+ARP\r\ncache poisoning, VOIP decoding on WEP encrypted channel, ...), etc.\r\nhttp://www.secdev.org/projects/scapy/\r\n\r\n* Bro\r\n\r\n    Bro is an open-source, Unix-based Network Intrusion Detection System (NIDS)\r\nthat passively monitors network traffic and looks for suspicious activity. Bro\r\ndetects intrusions by first parsing network traffic to extract its application-\r\nlevel semantics and then executing event-oriented analyzers that compare the\r\nactivity with patterns deemed troublesome. Its analysis includes detection of\r\nspecific attacks (including those defined by signatures, but also those defined\r\nin terms of events) and unusual activities (e.g., certain hosts connecting to\r\ncertain services, or patterns of failed connection attempts). http://bro-\r\nids.org/\r\n\r\n* Ntop\r\n\r\n    Ntop is a network traffic probe that shows the network usage, similar to\r\nwhat the popular top Unix command does. ntop is based on libpcap and it has\r\nbeen written in a portable way in order to virtually run on every Unix platform\r\nand on Win32 as well. http://www.ntop.org/\r\n\r\n* CoralReef\r\n\r\n    CoralReef is a software suite developed by CAIDA to analyze data collected\r\nby passive Internet traffic monitors. It provides a programming library\r\nlibcoral, similar to libpcap with extensions for ATM and other network types,\r\nwhich is available from both C and Perl. The software presently supports\r\ndedicated PC boxes using OC3mon and OC12mon cards that collect traffic data in\r\nreal time, as well as reading from pcap tracefiles. Version 3.4 to be released\r\nsoon supports listening via bpf enabled devices. CoralReef includes drivers,\r\nanalysis, web report generation, examples, and capture software. This package\r\nis maintained by CAIDA developers with the support and collaboration of the\r\nInternet measurement community.\r\nhttp://www.caida.org/tools/measurement/coralreef/\r\n\r\n* Xplot\r\n\r\n    The program xplot was written in the late 1980s to support the analysis of\r\nTCP packet traces. http://www.xplot.org/\r\n\r\n* Multitail\r\n\r\n    MultiTail now has a colorscheme included for monitoring the tcpdump output.\r\nIt can also filter, convert timestamps to timestrings and much more.\r\nhttp://www.vanheusden.com/multitail\r\n\r\n* Netsniff-ng\r\n\r\n    Netsniff-ng is a toolkit of free Linux networking utilities, a Swiss army\r\nknife for your daily Linux network plumbing if you will. http://netsniff-\r\nng.org/ or on [GitHub](www.github.com/borkmann/netsniff-ng).\r\n\r\n* NetDude\r\n\r\n    Netdude (NETwork DUmp data Displayer and Editor). From their webpage, \"it\r\nis a GUI-based tool that allows you to make detailed changes to packets in\r\ntcpdump tracefiles.\" http://netdude.sourceforge.net/\r\n\r\n* Libcrafter\r\n\r\n    Libcrafter is a high level library for C++ designed to make easier the\r\ncreation and decoding of network packets. It is able to craft or decode packets\r\nof most common network protocols, send them on the wire, capture them and match\r\nrequests and replies. Submitted by: Esteban Pellegrino\r\nhttp://code.google.com/p/libcrafter/\r\n\r\n* WinPcap info\r\n\r\n    An extract of a message from Guy Harris on state of WinPcap and WinDump.\r\nhttp://www.tcpdump.org/wpcap.html\r\n\r\n* Sniffer\r\n\r\n    The Sniffer product family covers different fields of application\r\n(Distributed, Portable and Wireless Environment). Sniffer solutions monitor,\r\ntroubleshoot, analyze, report on, and proactively manage network performance.\r\nThey ensure peak performance throughout the enterprise infrastructure, across\r\nall LAN, WAN and high-speed topologies, from 10/100 Ethernet to the latest\r\nhigh-speed Asynchronous ATM, Gigabit, and Packet-over-SONET (PoS) backbones.\r\nhttp://www.sniffer.com/products/sniffer-basic/default.asp?A=2\r\n\r\n* Traffic Data Repository at the WIDE Project\r\n\r\n    It becomes increasingly important for both network researchers and\r\noperators to know the trend of network traffic and to find anomaly in their\r\nnetwork traffic. This paper describes an on-going effort within the WIDE\r\nproject to collect a set of free tools to build a traffic data repository\r\ncontaining detailed information of our backbone traffic. Traffic traces are\r\ncollected by tcpdump and, after removing privacy information, the traces are\r\nmade open to the public. We review the issues on user privacy, and then, the\r\ntools used to build the WIDE traffic repository. We will report the current\r\nstatus and findings in the early stage of our IPv6 deployment.\r\nhttp://www.sonycsl.co.jp/person/kjc/papers/freenix2000/\r\n\r\n* ITA: Internet Traffic Archive\r\n\r\n    The Internet Traffic Archive is a moderated repository to support\r\nwidespread access to traces of Internet network traffic, sponsored by ACM\r\nSIGCOMM. The traces can be used to study network dynamics, usage\r\ncharacteristics, and growth patterns, as well as providing the grist for trace-\r\ndriven simulations. The archive is also open to programs for reducing raw trace\r\ndata to more manageable forms, for generating synthetic traces, and for\r\nanalyzing traces. http://www.sigcomm.org/ITA/\r\n\r\n* Sanitize\r\n\r\n    Sanitize is a collection of five Bourne shell scripts for reducing tcpdump\r\ntraces in order to address security and privacy concerns, by renumbering hosts\r\nand stripping out packet contents. Each script takes as input a tcpdump trace\r\nfile and generates to stdout a reduced, ASCII file in fixed-column format.\r\nhttp://ita.ee.lbl.gov/html/contrib/sanitize.html\r\n\r\n* Ipsumdump (posted by adulau 2012-12-25)\r\n\r\n    The ipsumdump program summarizes TCP/IP dump files into a self-describing\r\nASCII format easily readable by humans and programs. Ipsumdump can read packets\r\nfrom network interfaces, from tcpdump files, and from existing ipsumdump files.\r\nIt will transparently uncompress tcpdump or ipsumdump files when necessary. It\r\ncan randomly sample traffic, filter traffic based on its contents, anonymize IP\r\naddresses, and sort packets from multiple dumps by timestamp. Also, it can\r\noptionally create a tcpdump file containing actual packet data. It's also\r\nconvinient to work with CLICK as a inserted module. For more info, please read:\r\nhttp://www.read.seas.harvard.edu/~kohler/ipsumdump/\r\n\r\n* Ntopng\r\n\r\n    Ntopng is the next generation version of the original ntop, a network\r\n  traffic probe that shows the network usage, similar to what the popular top\r\n  Unix command does. ntop is based on libpcap and it has been written in a\r\n  portable way in order to virtually run on every Unix platform, MacOSX and on\r\n  Win32 as well. (http://www.ntop.org/products/ntop/)\r\n\r\nFile Extraction<a name=\"fileextraction\"></a>\r\n----------------------------------------\r\n\r\n* Xplico\r\n\r\n    The goal of Xplico is extract from an internet traffic capture the\r\napplications data contained. For example, from a pcap file Xplico extracts each\r\nemail (POP, IMAP, and SMTP protocols), all HTTP contents, each VoIP call (SIP),\r\nFTP, TFTP, and so on. Xplico isn't a network protocol analyzer. Xplico is an\r\nopen source Network Forensic An alysis Tool (NFAT). Xplico is released under\r\nthe GNU General Public License and with some scripts under Creative Commons\r\nAttribution-NonCommercial-ShareAlike 3.0 Unported (CC BY-NC-SA 3.0) License.\r\nhttp://www.xplico.org/about\r\n\r\n* Justniffer\r\n\r\n    Justniffer is a network protocol analyzer that captures network traffic and\r\nproduces logs in a customized way, can emulate Apache web server log files,\r\ntrack response times and extract all \"intercepted\" files from the HTTP traffic.\r\nhttp://justniffer.sourceforge.net/\r\n\r\n* NetworkMiner\r\n\r\n    NetworkMiner is a Network Forensic Analysis Tool (NFAT) for Windows (but\r\nalso works in Linux / Mac OS X / FreeBSD). NetworkMiner can be used as a\r\npassive network sniffer/packet capturing tool in order to detect operating\r\nsystems, sessions, hostnames, open ports etc. without putting any traffic on\r\nthe network. NetworkMiner can also parse PCAP files for off-line analysis and\r\nto regenerate/ reassemble transmitted files and certificates from PCAP files.\r\nhttp://www.netresec.com/?page=NetworkMiner\r\n\r\n* Tcpxtract\r\n\r\n    Tcpxtract is a tool for extracting files from network traffic based on file\r\nsignatures. Extracting files based on file type headers and footers (sometimes\r\ncalled \"carving\") is an age old data recovery technique. Tools like Foremost\r\nemploy this technique to recover files from arbitrary data streams. Tcpxtract\r\nuses this technique specifically for the application of intercepting files\r\ntransmitted across a network. Other tools that fill a similar need are driftnet\r\nand EtherPEG. driftnet and EtherPEG are tools for monitoring and extracting\r\ngraphic files on a network and is commonly used by network administrators to\r\npolice the internet activity of their users. The major limitations of driftnet\r\nand EtherPEG is that they only support three filetypes with no easy way of\r\nadding more. The search technique they use is also not scalable and does not\r\nsearch across packet boundries. tcpxtract features the following:\r\nhttp://tcpxtract.sourceforge.net/\r\n\r\n* Foremost\r\n\r\n    Foremost is a console program to recover files based on their headers,\r\nfooters, and internal data structures. This process is commonly referred to as\r\ndata carving. Foremost can work on image files, such as those generated by dd,\r\nSafeback, Encase, etc, or directly on a drive. The headers and footers can be\r\nspecified by a configuration file or you can use command line switches to\r\nspecify built-in file types. These built-in types look at the data structures\r\nof a given file format allowing for a more reliable and faster recovery.\r\nhttp://foremost.sourceforge.net/\r\n\r\n* Dsniff\r\n\r\n    Dsniff is a collection of tools for network auditing and penetration\r\ntesting. dsniff, filesnarf, mailsnarf, msgsnarf, urlsnarf, and webspy passively\r\nmonitor a network for interesting data (passwords, e-mail, files, etc.).\r\narpspoof, dnsspoof, and macof facilitate the interception of network traffic\r\nnormally unavailable to an attacker (e.g, due to layer-2 switching). sshmitm\r\nand webmitm implement active monkey-in-the-middle attacks against redirected\r\nSSH and HTTPS sessions by exploiting weak bindings in ad-hoc PKI.\r\nhttp://www.monkey.org/~dugsong/dsniff/\r\n\r\n* Chaosreader\r\n\r\n    A freeware tool to trace TCP/UDP/... sessions and fetch application data\r\nfrom snoop or tcpdump logs. This is a type of \"any-snarf\" program, as it will\r\nfetch telnet sessions, FTP files, HTTP transfers (HTML, GIF, JPEG, ...), SMTP\r\nemails, ... from the captured data inside network traffic logs. A html index\r\nfile is created that links to all the session details, including realtime\r\nreplay programs for telnet, rlogin, IRC, X11 and VNC sessions; and reports such\r\nas image reports and HTTP GET/POST content reports. Chaosreader can also run in\r\nstandalone mode - where it invokes tcpdump or snoop (if they are available) to\r\ncreate the log files and then processes them.\r\nhttp://chaosreader.sourceforge.net/\r\n\r\n* Tcpick\r\n\r\n    Tcpick is a textmode sniffer libpcap-based that can track, reassemble and\r\nreorder tcp streams. Tcpick is able to save the captured flows in different\r\nfiles or displays them in the terminal, and so it is useful to sniff files that\r\nare transmitted via ftp or http. It can display all the stream on the terminal,\r\nwhen the connection is closed in different display modes like hexdump, hexdump\r\n+ ascii, only printable charachters, raw mode and so on. Available a color mode\r\ntoo, helpful to read and understand better the output of the program. Actually\r\nit can handle several interfaces, including ethernet cards and ppp. It is\r\nuseful to keep track of what users of a network are doing, and is usable with\r\ntextmode tools like grep, sed, awk. http://tcpick.sourceforge.net/\r\n\r\nOther Projects<a name=\"others\"></a>\r\n-------------------------------------------\r\n\r\n* FFT-FGN-C\r\n\r\n    FFT-FGN-C is a program for synthesizing a type of self-similar process\r\nknown as fractional Gaussian noise. The program is fast but approximate.\r\nFractional Gaussian noise is only one type of self-similar process. When using\r\nthis program for synthesizing network traffic, you must keep in mind that it\r\nmay be that the traffic you seek is better modeled using one of the other\r\nprocesses. The output of the program (perhaps transformed - see the\r\ndocumentation) describes an arrival process, not an interarrival process. That\r\nis, the output can be interpreted as a count of network arrivals during a\r\nparticular time interval; but if your application requires exact arrival times,\r\na separate mechanism is needed to transform the count into individual arrivals\r\n(doing this is a research area).\r\nhttp://ita.ee.lbl.gov/html/contrib/fft_fgn_c.html\r\n\r\n* Usenix 93 paper on BPF\r\n\r\n    The libpcap interface supports a filtering mechanism based on the\r\narchitecture in the BSD packet filter. BPF is described in the 1993 Winter\r\nUsenix paper \"The BSD Packet Filter: A New Architecture for User-level Packet\r\nCapture\".\r\n> * The original is at: ftp://ftp.ee.lbl.gov/papers/bpf-usenix93.ps.Z\r\n> * A copy (compressed postscript 144K):  http://www.tcpdump.org/papers\r\n>   /bpf-usenix93.ps.Z\r\n> * Gzip'ed postscript: http://www.tcpdump.org/papers/bpf-usenix93.ps.gz (100K)\r\n> * For the Post-script impaired, here is some PDF:bpf-usenix93.pdf (135K)\r\n\r\n* BPF for Ultrix\r\n\r\n    A distribution of BPF for Ultrix 4.2, with both source code and binary\r\nmodules. http://www.tcpdump.org/other/bpfext42.tar.Z\r\n\r\n* BPF+\r\n\r\n    Exploiting Global Data-flow Optimization in a Generalized Packet Filter\r\nArchitecture By Andrew Begel, Steven McCanne, and Susan Graham, originally at:\r\nhttp://www.cs.berkeley.edu/~abegel/sigcomm99/bpf+.ps\r\n\r\n* DPF\r\n\r\n    A paper presented at SIGCOMM '96 on an enhanced version of BPF.\r\nhttp://www.pdos.lcs.mit.edu/~engler/dpf.html\r\n\r\nHistory\r\n-----------\r\n\r\n> * Update 2014-07-24: Traffic moniter tools under *nix (http://bit.do/J8qM)\r\n> * Update 2013-01-01: Another similar list from Wireshark\r\n>   (http://wiki.wireshark.org/Tools)\r\n> * Update 2012-12-26: A similar collection of web version:\r\n>   (http://bit.do/J8q4)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}